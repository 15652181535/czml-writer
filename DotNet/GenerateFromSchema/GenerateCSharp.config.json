{
    "namespace": "CesiumLanguageWriter",
    "lazyNamespace": "System",
    "types": {
        "TimeIntervalCollection": [
            {
                "parameters": [
                    {
                        "type": "TimeInterval",
                        "name": "value",
                        "description": "The interval."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteValue(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "JulianDate",
                        "name": "start",
                        "description": "The earliest date of the interval."
                    },
                    {
                        "type": "JulianDate",
                        "name": "stop",
                        "description": "The latest date of the interval."
                    }
                ],
                "callOverload": "new TimeInterval(start, stop)"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<TimeInterval>",
                        "name": "value",
                        "description": "The intervals."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteValue(Output, value);"
            }
        ],
        "TimeInterval": [
            {
                "parameters": [
                    {
                        "type": "TimeInterval",
                        "name": "value",
                        "description": "The interval."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteValue(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "JulianDate",
                        "name": "start",
                        "description": "The earliest date of the interval."
                    },
                    {
                        "type": "JulianDate",
                        "name": "stop",
                        "description": "The latest date of the interval."
                    }
                ],
                "callOverload": "new TimeInterval(start, stop)"
            }
        ],
        "Cartesian2": [
            {
                "parameters": [
                    {
                        "type": "Rectangular",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteValue(Output, value);"
            },
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "x",
                        "description": "The X component."
                    },
                    {
                        "type": "double",
                        "name": "y",
                        "description": "The Y component."
                    }
                ],
                "callOverload": "new Rectangular(x, y)"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the vector is specified."
                    },
                    {
                        "type": "IList<Rectangular>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the vector is specified."
                    },
                    {
                        "type": "IList<Rectangular>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to use in the `values` collection."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to use from the `values` collection."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteValue(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Cartesian3": [
            {
                "parameters": [
                    {
                        "type": "Cartesian",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteValue(Output, value);"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the vector is specified."
                    },
                    {
                        "type": "IList<Cartesian>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the vector is specified."
                    },
                    {
                        "type": "IList<Cartesian>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to use in the `values` collection."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to use from the `values` collection."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteValue(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Cartographic": [
            {
                "parameters": [
                    {
                        "type": "Cartographic",
                        "name": "value",
                        "description": "The interval."
                    }
                ],
                "writeValue": "CesiumWritingHelper.WriteValue(Output, value);"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the position is specified."
                    },
                    {
                        "type": "IList<Cartographic>",
                        "name": "values",
                        "description": "The values corresponding to each date."
                    }
                ],
                "callOverload": "dates, values, 0, dates.Count"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the vector is specified."
                    },
                    {
                        "type": "IList<Cartographic>",
                        "name": "values",
                        "description": "The position corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to use in the `values` collection."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to use from the `values` collection."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteValue(Output, PropertyName, dates, values, startIndex, length);"
            }
        ],
        "Image": [
            {
                "parameters": [
                    {
                        "type": "string",
                        "name": "url",
                        "description": "The URL of the image."
                    }
                ],
                "writeValue": "Output.WriteValue(url);"
            },
            {
                "namespaces": ["System.Drawing"],
                "parameters": [
                    {
                        
                        "type": "Image",
                        "name": "image",
                        "description": "The image for which to create a data URL."
                    }
                ],
                "callOverload": "CesiumFormattingHelper.ImageToDataUrl(image)"
            },
        ],
        "HorizontalOrigin": [
            {
                "parameters": [
                    {
                        "type": "CesiumHorizontalOrigin",
                        "name": "value",
                        "description": "The horizontal origin."
                    }
                ],
                "writeValue": "Output.WriteValue(CesiumFormattingHelper.HorizontalOriginToString(value));"
            }
        ],
        "Double": [
            {
                "parameters": [
                    {
                        "type": "double",
                        "name": "value",
                        "description": "The value."
                    }
                ],
                "writeValue": "Output.WriteValue(value);"
            },
            {
                "namespaces": ["System.Collections.Generic"],
                "parameters": [
                    {
                        "type": "IList<JulianDate>",
                        "name": "dates",
                        "description": "The dates at which the value is specified."
                    },
                    {
                        "type": "IList<double>",
                        "name": "values",
                        "description": "The value corresponding to each date."
                    },
                    {
                        "type": "int",
                        "name": "startIndex",
                        "description": "The index of the first element to use in the `values` collection."
                    },
                    {
                        "type": "int",
                        "name": "length",
                        "description": "The number of elements to use from the `values` collection."
                    }
                ],
                "writePropertyName": false,
                "writeValue": "CesiumWritingHelper.WriteValue(Output, PropertyName, dates, values, startIndex, length);"
            }
        ]
    }
}
